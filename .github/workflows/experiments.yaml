name: experiments
on:
  - workflow_dispatch
  - push
jobs:
  set-env-variable-in-job:
    # it did not work because the environment variable is set in the job itself, does not propagate to other jobs
    name: Set environment variable in job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set the value
        id: step_one
        run: |
          echo "action_state=yellow" >> "$GITHUB_ENV"
      - name: Use the value
        id: step_two
        run: |
          echo "${{ env.action_state }}"
      - name: Set a multiline environment variable
        run: |
          echo "LIBRARIES_JSON<<EOF" >> "$GITHUB_ENV"
          echo $(cat ./libraries.json) >> "$GITHUB_ENV"
          echo "EOF" >> "$GITHUB_ENV"
      - name: Print multiline environment variable
        run: |
          echo "${{ env.LIBRARIES_JSON }}"

  set-output-variable:
    name: Set output variable in job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set a multiline output variable
        id: my-read-json-step
        run: |
          echo "SELECTED_COLOR=green" >> "$GITHUB_OUTPUT"
      - name: Print multiline output variable
        run: |
          echo "${{ steps.my-read-json-step.outputs.SELECTED_COLOR }}"

#  print-details:
#    needs: experiments
#    runs-on: ubuntu-latest
#    steps:
#      - name: Print multiline environment variable
#        run: |
#          echo "${{ env.LIBRARIES_JSON }}"

#  build-libraries:
#    needs: experiments
#    name: Build libraries
#    runs-on: ubuntu-latest
#    strategy:
#      matrix: ${{fromJson(env.LIBRARIES_JSON)}}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Print details
#        run: |
#          echo ${{ matrix }}